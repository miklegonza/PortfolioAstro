---
const mail = 'mailto:gonzalez.michael1803@gmail.com?subject=I%20want%20to%20make%20contact.';
---

<header class="flex justify-center items-center sticky w-full top-0 px-5 lg:px-0 py-6">
    <nav class="flex flex-wrap justify-center items-center gap-x-10 w-auto opacity-80">
        <a class="text-md md:text-lg" href="#home">Home</a>
        <a class="text-md md:text-lg" href="#projects">Projects</a>
        <a class="text-md md:text-lg" href="#experience">Experience</a>
        <a class="text-md md:text-lg" href="#about">About</a>
        <a class="text-md md:text-lg" href={mail}>Contact</a>
    </nav>
</header>

<style>
    header {
        transition: all 0.5s ease;
    }

    .active {
        @apply border-b-4 border-purple-500;
    }

    .blur-header {
        @apply shadow-lg backdrop-blur-xl bg-gray-700/50 z-10;
    }
</style>

<script>
    const sections = document.querySelectorAll('section[id]');
    const header = document.querySelector('header');
    if (header) {
        window.addEventListener('scroll', () => {
            if (window.scrollY > 100) {
                header.classList.add('blur-header');
            } else {
                header.classList.remove('blur-header');
            }
        });
    }
    const changeBorder: IntersectionObserverCallback = (
        entries: IntersectionObserverEntry[],
        observer: IntersectionObserver,
    ) => {
        entries.forEach((entry: IntersectionObserverEntry) => {
            if (entry.isIntersecting) {
                const id = entry.target.getAttribute('id');
                const currentActive = document.querySelector('.active');
                if (currentActive) {
                    currentActive.classList.remove('active');
                }
                const newActive = document.querySelector(`a[href="#${id}"]`);
                if (newActive) newActive.classList.add('active');
            }
        });
    };

    const options: IntersectionObserverInit = {
        root: null,
        rootMargin: '0px',
        threshold: 0.5,
    };

    const observer = new IntersectionObserver(changeBorder, options);

    sections.forEach((section) => {
        observer.observe(section);
    });
</script>
